[buildout]
# lxml requirements - apt-get install libxml2-dev libxslt1-dev

parts =
    instance
    solr
#    rabbitmq
    database
    test
    coverage

extensions = 
    mr.developer

index = http://pypi.bluedynamics.eu

find-links = http://effbot.org/downloads

develop = .

sources = sources
sources-dir = ${buildout:directory}/devsrc
auto-checkout = *

versions = versions

[versions]
zope.testrunner = 4.0.1

[sources]

[instance]
recipe = zc.recipe.egg:scripts
dependent-scripts = true
initialization =
    import os
    os.environ['APP_PATH'] = '${buildout:directory}'
eggs =
    cone.mdb

[lucene]
recipe = hexagonit.recipe.download
url = http://mirrors.devlib.org/apache/lucene/solr/1.4.0/apache-solr-1.4.0.tgz
strip-top-level-dir = true

[solr]
recipe = collective.recipe.solrinstance
solr-location = ${lucene:destination}
host = localhost
port = 8983
basepath = solr
logdir = ${buildout:directory}/var/log
default-search-field = body
index =
    name:uid required:true type:string indexed:true stored:true
    name:suid type:string indexed:true stored:true
    name:author type:string indexed:true stored:true
    name:created type:date indexed:true stored:true
    name:effective type:date indexed:true stored:true
    name:expires type:date indexed:true stored:true
    name:revision type:string indexed:true stored:true
    name:mimetype type:string indexed:true stored:true
    name:creator type:string indexed:true stored:true
    name:keywords type:string indexed:true stored:true multivalued:true
    name:relations type:string indexed:true stored:true multivalued:true
    name:title type:string indexed:true stored:true
    name:description type:text indexed:true stored:true
    name:alttag type:string indexed:true stored:true
    name:body type:text indexed:true stored:false multivalued:true
    name:state type:string indexed:true stored:true
    name:visibility type:string indexed:true stored:true
    name:path type:string indexed:true stored:true
    name:physical_path type:string indexed:true stored:true
    name:modified type:date indexed:true stored:true
    name:filename type:string indexed:true stored:true
    name:size type:string indexed:true stored:true
    name:type type:string indexed:true stored:true
    name:repository type:string indexed:true stored:true

[rabbitmq]
# apt-get install erlang
recipe = rod.recipe.rabbitmq
url = http://www.rabbitmq.com/releases/rabbitmq-server/v1.7.2/rabbitmq-server-1.7.2.tar.gz

[database]
recipe = z3c.recipe.mkdir
paths = ${buildout:directory}/var/repositories

[testenv]
APP_PATH = ${buildout:directory}

[test]
recipe = zc.recipe.testrunner
eggs =
    cone.tile[test]
    cone.app[test]
    cone.mdb[test]
    node[test]
    odict[test]
    plumber[test]
    yafowil[test]
    yafowil.widget.datetime[test]
    yafowil.widget.richtext[test]
    yafowil.widget.dict[test]
    yafowil.widget.autocomplete[test]
    yafowil.widget.dynatree[test]
    bda.basen[test]
    node.ext.mdb[test]

environment = testenv
defaults = ['--auto-color', '--auto-progress']

[coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    ./bin/test --coverage ../../coverage -v --auto-progress "$@"
output = ${buildout:directory}/bin/coverage
mode = 755
