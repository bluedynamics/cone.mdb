
    >>> from cone.mdb.public import Term, Group
    >>> Term('foo', 'foo') & Term('bar', 'bar') | Term('baz', 'baz')
    foo:foo AND bar:bar OR baz:baz
    
    >>> Term('foo', 'foo') & Group(Term('bar', 'bar') | Term('baz', 'baz'))
    foo:foo AND (bar:bar OR baz:baz)
    
    >>> Group(Term('foo', 'foo') & Term('bar', 'bar')) | Term('baz', 'baz')
    (foo:foo AND bar:bar) OR baz:baz
    
    >>> Group(Term('foo', 'foo') & Term('bar', 'bar')) \
    ... & Group(Term('bar', 'bar') | Term('baz', 'baz'))
    (foo:foo AND bar:bar) AND (bar:bar OR baz:baz)